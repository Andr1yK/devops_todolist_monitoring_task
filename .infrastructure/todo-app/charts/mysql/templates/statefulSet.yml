apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.mysql.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-app
  replicas: 2
  serviceName: {{ .Chart.Name }}-service
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-app
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: mysql:8.0
        env:
        {{- range $key, $value := .Values.mysql.secrets }}
          -  name: {{ $key }}
             valueFrom:
               secretKeyRef:
                 name: {{ $.Chart.Name }}-secrets
                 key: {{ $key }}
        {{- end }}
        ports:
        - name: {{ .Values.mysql.service.portName}}
          containerPort: {{ .Values.mysql.service.portNumber }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: config-map
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: {{ .Values.mysql.resources.requests.cpu }}
            memory: {{ .Values.mysql.resources.requests.memory }}
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: config-map
        configMap:
          name: {{ .Chart.Name }}-configs
      tolerations:
      - key: "app"
        operator: "Equal"
        value: {{ .Chart.Name }}-app
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ .Chart.Name }}-app
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ .Chart.Name }}-app
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mysql.storage.request }}
